----------------------------------------------------------------------
-- Copyright 2020 DARPA CASE
--
-- Experimental seL4 specific properties for configuring kernel
-- and run-time schedule
----------------------------------------------------------------------
property set CASE_Scheduling is
	-- The values of these properties are not computed
	-- values; they will be user specified, typically by the integrator's
	-- Systems Engineer.
	--
	-- We will get fancier if we do a general ARINC653 solution. This
	-- works for a basic schedule.
	
	--- CASE_Scheduling::Domain is the numeric ID of the domain to which
	--- the Systems Engineer assigns the thread. Once the examples get
	--- fixed to have processes, this should be at the process level,
	--- rather than thread level.
	Domain: aadlinteger applies to (thread, process);
	
  Domain_Entry: type record (
    Component: reference (process);
    Domain: aadlinteger;
  );
  
  -- Alternative method for assigning domains to processes.  Only the mappings
  -- assigned to the root system will be used (i.e. subsystems can define their
  -- own mappings that would be used if the subsystem was used as the root of
  -- an instantiation).  If an entry doesn't exist for a process then the process's 
  -- Domain association will be used if present.
  Domain_Mapping: list of CASE_Scheduling::Domain_Entry applies to (system);
    
  --- The maximum allowed domain identifier
	Max_Domain: aadlinteger applies to (processor, virtual processor);
	
	
	--- Schedule_Source_Text specifies the location of the source text for a
	--- periodic domain schedule. For seL4, this will be a kernel modification.
	Schedule_Source_Text: aadlstring applies to (processor, virtual processor);
	
	-- use Timing_Properties::Compute_Execution_Time to specify the duration
	-- for which the thread is scheduled. This ends up in the domain schedule. 
	
	-- Use Timing_Properties::Frame_Period to specify the duration of the
	-- major frame.
	
	-- use TimingProperties::Clock_Period to specify tick duration in ms.
	-- (seL4 default is 2) on the vanilla (non-MCS) seL4, the length of
	-- the timer tick is configurable, defaulting to 2ms. None of the
	-- verified configurations change this. See:
	-- https://github.com/seL4/seL4/blob/master/config.cmake#L213
	
	
	--- Specifies the style of pacing to be used.  The default is <i>Self_Pacing</i> 
	--- unless the model has virtual machines in which case <i>Pacer</i> must be used.
	--- <ul>
	---   <li><b>Pacer</b>: A Pacer component will be generated that sends pacing events to
	---     each component.  The Pacer should be scheduled in domain 1.
	---   <li><b>Self_Pacing</b>: Components pace themselves.
	--- </ul> 
	Pacing_Method: enumeration (Pacer, Self_Pacing) applies to (processor, virtual processor);
	
end CASE_Scheduling;